- resource.user_type ||= params[:user].try(:fetch, :user_type) || User::TYPE_STUDENT

.row
  .span12
    %h1= resource.student? ? t('signup_form.student_pitch') : t('signup_form.teacher_pitch')
    - if resource.student?
      = t('signup_form.overview')

      %h4= t('signup_form.no_signup_header')
      = sanitize(t('signup_form.no_signup_message').html_safe, tags: %w(a), attributes: %w(href target))

      - if eligible_for_prize?
        %h4= t('signup_form.prizes_header')
        = t('signup_form.prizes_message', num_trophies: Trophy::TROPHY_MAX)
        %br/
        %br/
        = render partial: 'shared/student_prize_mini_grid'

      %br/
      %br/

      %h2= t('signup_form.student_title')
    - else
      = t('signup_form.overview')
      = link_to t('signup_form.teacher_educator_guide'), 'http://code.org/educate/20hr', :target => '_blank'

      - if eligible_for_prize?
        %h4= sanitize(t('signup_form.teacher_prize_header').html_safe, tags: %w(a), attributes: %w(href target))
        = sanitize(t('signup_form.teacher_prize_message').html_safe, tags: %w(a), attributes: %w(href target))
        %br/
        = sanitize(t('signup_form.teacher_prize_limits').html_safe, tags: %w(a), attributes: %w(href target))

      %h2= t('signup_form.teacher_title')

.row
  .span8
    = form_for(resource, :as => resource_name, :url => registration_path(resource_name)) do |f|
      = devise_error_messages!

      = f.hidden_field :user_type
      = f.hidden_field :locale, value: locale

      = f.text_field :name, class: 'input-xlarge', autofocus: true, placeholder: t('activerecord.attributes.user.name')
      = f.email_field :email, class: 'input-xlarge', placeholder: t('activerecord.attributes.user.email')
      %br/
      = f.text_field :username, class: 'input-xlarge', placeholder: t('activerecord.attributes.user.username'), 'data-autocheck-url' => "/signup_check/username"
      %span#username_message
      %br/
      - if f.object.password_required?
        %h4= t('activerecord.attributes.user.password')
        = f.password_field :password, class: 'input-xlarge', placeholder: t('activerecord.attributes.user.password')
        = f.password_field :password_confirmation, class: 'input-xlarge', placeholder: t('activerecord.attributes.user.password_confirmation')
        %br/
        %span#password_message

      - if resource.teacher?
        = f.text_field :school, class: 'input-xlarge', placeholder: t('signup_form.school_name')
        %br/
        = t('signup_form.school_address')
        %br/
        = f.text_area :full_address, class: 'input-xxlarge', placeholder: t('signup_form.address_placeholder'), rows: 4
        %br/

      - if resource.student?
        .field
          = f.label t('signup_form.gender')
          = f.select :gender, gender_options
        .field
          = f.label t('signup_form.birthday')
          :javascript
            $(function() {
              $( "#user_birthday" ).datepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: "-120:+0",
                dateFormat: "yy-mm-dd"
              });
            });

          = f.text_field(:birthday, id: "user_birthday", placeholder: t('signup_form.birthday'))

      = f.submit t('signup_form.submit'), class: "btn btn-primary"
      %br/
      %br/
      = resource.student? ? t('signup_form.student_terms') : t('signup_form.teacher_terms')
  .span4
    %div{ style: 'padding-left: 20px;  border-left: 1px solid black;' }
      - if !resource.teacher?
        = link_to t('signup_form.teacher'), new_user_registration_path('user[user_type]' =>  User::TYPE_TEACHER)
        %br/
      = render "devise/shared/links"

:javascript
  $( "#user_username" ).on('input',function(e){
    $.post($(this).data('autocheckUrl'),{ username:$(this).val() } ,function(data) {
      $('#username_message').text(data.message);
    });
  });

  $( "#user_password" ).on('input',function(e){
    var password = $(this).val();
    var password_message = $('#password_message');
    if (!password || password.length < 6) {
      password_message.text("#{t('signup_form.invalid_password')}");
    } else {
      password_message.text("#{t('signup_form.valid_password')}");
    }
  });

  $( "#user_password_confirmation" ).on('input',function(e){
    var conf_password = $(this).val();
    var origin_password = $('#user_password').val();
    var password_message = $('#password_message');
    if (conf_password !== origin_password) {
      password_message.text("#{t('signup_form.mismatch_password')}");
    } else {
      password_message.text("");
    }
  });

  $( "#user_name" ).placeholder();
  $( "#user_email" ).placeholder();
  $( "#user_username" ).placeholder();
  $( "#user_birthday" ).placeholder();
  $( "#user_school" ).placeholder();
