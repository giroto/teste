"bg":
  data:
    script:
      name:
        20-hour:
          desc: K-8 интро на курс по компютърни науки
          Unplug1: Етап 1
          Maze: Етап 2
          Unplug2: Етап 3
          Unplug3: Етап 4
          Artist: Етап 5
          Unplug4: Етап 6
          Artist2: Етап 7
          Unplug5: Етап 8
          Farmer: Етап 9
          Unplug6: Етап 10
          Artist3: Етап 11
          Unplug7: Етап 12
          Farmer2: Етап 13
          Unplug8: Етап 14
          Artist4: Етап 15
          Unplug9: Етап 16
          Farmer3: Етап 17
          Unplug10: Етап 18
          Artist5: Етап 19
          Unplug11: Етап 20
        Hour of Code:
          desc: Час на Кодирането
          Maze: Етап 1
        Edit Code:
          desc: Редактиране на кода
          MazeEC: Етап 1
        2014 Levels:
          desc: 2014 Puzzles (beta)
          MazeEC: Stage 1
        Flappy Levels:
          desc: Flappy Bird
          MazeEC: Stage 1
    game:
      name:
        Unplug1: Въведение в компютърните науки
        Maze: Лабиринт
        Unplug2: Изчислително мислене
        Unplug3: Програмиране на милиметрова хартия
        Artist: Художникът
        Unplug4: Алгоритми
        Artist2: Художника 2
        Unplug5: Функции
        Farmer: Фермера
        Unplug6: Условия
        Artist3: Художника 3
        Unplug7: Писане на песен
        Farmer2: Фермера 2
        Unplug8: Абстракция
        Artist4: Художника 4
        Unplug9: Relay Programming
        Farmer3: Фермера 3
        Unplug10: Интернет
        Artist5: Художника 5
        Unplug11: Заключение
        MazeEC: Лабиринт
        Bounce: Bounce
        Flappy: Flappy Bird
    trophy:
      name:
        Bronze: Бронз
        Silver: Сребро
        Gold: Злато
    concept:
      description:
        sequence: Последователност
        if: блок ако
        if_else: Блок ако-друго
        loop_times: Repeat times block
        loop_until: Repeat until block
        loop_while: While block
        loop_for: Counter block
        function: Функции
        parameters: Функции с параметри
    level:
      instructions:
        maze_2_2: 'Може ли да ми помогнете да хвана това лошо прасе? Прикрепете няколко
          "движи се напред" блока заедно и натиснете "Изпълни програмата" за да ми
          помогнете да стигна до там. '
        maze_2_1: Това прасе ми лази по нервите. Помогни ми да го намеря!
        maze_2_2_5: Проследи пътя и ме заведи до това глупаво прасе. Избягвай динамита
          или ще хвърчи перушина!
        maze_2_3: Заведи ме до зелената лошотия! (Внимавай за динамит)
        maze_2_4: Запази спокойствие и ми помогни да намеря лошото прасе. В противен
          случай може да се ядосам!
        maze_2_5: Има начин да стигна до това глупаво прасе с помощта само на 2 блока.
          Можеш ли да го измислиш?
        maze_2_6: Опитай да ме заведеш до зеления нарушител като използваш само три
          блока.
        maze_2_7: Помогни ми да прогоня това лошо прасе като използваш възможно най-малък
          брой блокове. Опитай да използваш повече от един "повтори" блок.
        maze_2_8: 'За да разгадаеш този пъзел, опитай блока "повтори" с тези 3 блока
          в него: движение, движение, завъртане.'
        maze_2_9: Добре, опитай новия "повтаряй до" блок - той ще се повтаря докато
          аз стигна до досадното прасе.
        maze_2_10: Добре, последен път за упражнение - можеш ли да разгадаеш този
          пъзел като използваш само 4 блока?
        maze_2_11: Скъпи човек. Аз зомби. Аз гладен. Трябва... добере... до слънчоглед...
          Можеш ли да ме заведеш до там само с 5 блока?
        maze_2_12: Добре, това е подобно, но малко по-различно. Можеш ли да го направиш
          само с 5 блока?
        maze_2_13: 'Използвай новия "Ако" блок за да ми помогнеш да реша кога да се
          обърна. Съвет: трябва ти само още един блок, но научи как го поставяме за
          да можеш да го направиш сам следващия път.'
        maze_2_14: Добре, това е като последния пъзел, но ще трябва да запомниш как
          използва "Ако" блока и "повтори" блока заедно.
        maze_2_15: Аз иска слънчоглед! Използвай "Ако" блока, за да ме заведеш до
          там с възможно най-малък брой блокове.
        maze_2_16: Добре, нека го направим отново за упражнение - това не е много
          по-различно, но внимавай за дъвкачите!
        maze_2_17: '"Ако-иначе" блока проверява условие, и прави едно нещо или друго.
          Опитай да ме заведеш до слънчогледа като използваш този нов блок.'
        maze_2_18: Още едно упражнение на блока "Ако-иначе", можеш ли да успееш от
          първия път?
        maze_2_19: Можеш ли да добавиш само 3 блока за да ми помогнеш да разреша по-сложен
          лабиринт? Ако го направиш правилно, ще мога да ходя по всяка крива линия
          независимо от дължината и.
        turtle_1_1: Здравей, аз съм художник. Можеш да напишеш код, чрез който да
          ме накараш да нарисувам почти всичко. Използвай няколко блока, за да ме
          накараш да рисувам върху сивата линия в картинката.
        turtle_1_2: 'Сега, начертай квадрат. ЗАБЕЛЕЖКА: използвай любимия си цвят
          като го избереш във новия "задай цвят" блок.'
        turtle_1_3: Направи квадрат като използваш само 3 блока.
        turtle_1_4: 'Начертай триъгълник, чиито страни са във различни цветове, с
          помощта на опцията "случаен цвят", която избира различен цвят всеки път.
          Съвет: ще трябва да решиш колко да се завъртиш като цъкнеш с мишката върху
          числото в "завърти" блока.'
        turtle_1_5: Сега, за упражнение, начертай триъгълник после квадрат за да начертаеш
          плик.
        turtle_1_6: 'Можеш ли да разбереш как да нарисуваш този триъгълник и квадрат?
          Съвет: Направи първо триъгълника, после реши колко да завъртиш преди да
          нарисуваш квадрата.'
        turtle_1_7: Добре, нека го направим малко по-трудно - виж дали ще можеш да
          начертаеш тези зелени очила. Всяка страна на квадратите е 100 пиксела, и
          са на 50 пиксела разстояние един от друг. Не забравяй да чертаеш в зелено!
        turtle_1_8: Добре, опитай да разбереш какво става ако изпълниш този код (или
          натисни "Изпълни" за да  опиташ). После го повтаряй достатъчно пъти, за
          да завършиш чертежа. Цветовете ще са различни всеки път.
        turtle_1_9: Можеш ли да отгатнеш, с какво число да заместиш въпросителните
          знаци, за да начертаеш кръг?
        turtle_1_10: 'Ти успя! сега, начертай каквото пожелаеш. Няколко забавни идеи:
          фигура от черти, снежинка или спирала. Също така опитай новия "задай ширина"
          блок. Забавлявай се!'
        turtle_4_1: 'Можеш ли да начертаеш триъгълник (с краища от 100 пиксела) като
          използваш само 3 блока? Съвет: използвай блок "повтори".'
        turtle_4_2: 'Try adding one block to complete this puzzle. Hint: we''ve provided
          blocks to draw 2 identical triangles, you need to put a "turn" in between,
          and decide out how far to turn.'
        turtle_4_3: Ok, here's the code you wrote to draw a single triangle. Can you
          add a "repeat" and "turn" block to make a pretty flower?
        turtle_4_4: 'Here''s the same code from the previous puzzle, but turning only
          36 degrees after drawing each triangle. How many times does this need to
          repeat? (Hint: after 360 degrees of turning the drawing will come full circle)'
        turtle_4_5: 'Here''s the same code from the previous puzzle, but repeating
          the turns 36 times. How many degrees should the turns be? (Hint: after 360
          degrees of turning the drawing will come full circle)'
        turtle_4_6: Using only 3 blocks, can you draw a square with edges of 20 pixels?
        turtle_4_7: 'Here''s the code for drawing the square from last puzzle. Can
          you repeat it to draw 10 adjacent squares like a ladder? Hint: you only
          need 2 more blocks.'
        turtle_4_8: Here's the solution to the previous puzzle. Can you add just 2
          more blocks to complete the drawing?
        turtle_4_9: Here's the solution to the previous puzzle. How many degrees should
          you turn to complete the drawing? (You probably need to guess a few times)
        turtle_4_10: Here's the solution to the previous puzzle. How many times should
          you repeat to complete the drawing?
        turtle_4_11: Try changing the numbers in the "turn" and "repeat" blocks to
          make different patterns. Or, experiment changing the rest of the code to
          draw anything you want.
        maze_karel_1_1: Здравейте, аз съм фермер. Нуждая се от вашата помощ, за да
          изравня полето в моята ферма, така че да е готово за засаждане. Преместете
          ме към купчината от мръсотия, и използвайте блок "Премахни", за да я премахнете.
        maze_karel_1_2: Next, move me to the hole and fill it with TWO shovelfuls
          of dirt, using the "fill" block.
        maze_karel_1_3: Move me to the pile of dirt and tell me how many shovelfuls
          to remove using as few blocks as possible.
        maze_karel_1_4: 'Can you help me remove all four piles of dirt? Hint: use
          a repeat block if you can.'
        maze_karel_1_5: 'Help me fill in all these holes with 5 shovelfuls of dirt.
          Hint: you can put a "repeat" block inside the "while" block.'
        maze_karel_1_6: Remove all the piles of dirt, using as few blocks as possible.
          The new options in the dropdown menu on the "while" block tell me if I'm
          standing on a pile or a hole.
        maze_karel_1_7: Wow, I found a really deep hole! I don't know how many shovelfuls
          of dirt it needs. Can you write a program that fills it until the ground
          is even?
        maze_karel_1_8: Help me fill in the hole at the end of the field, using as
          few blocks as possible.
        maze_karel_1_9: 'Make me remove all these piles of dirt. Try to use as few
          blocks as possible. Hint: try using a "while" block.'
        maze_karel_1_10: I'm working late, so it's dark out, and I can't tell how
          large the piles are. Now I don't have all the options I used to have on
          the while block. Move me along the field, and if there is a pile, remove
          it.
        maze_karel_1_11: 'It''s still dark outside. Move me along the field. If there
          is a pile, remove it, and if there is a hole, fill it in. Hint: use the
          dropdown menu of options on the "if" block.'
        turtle_2_1: 'Hello. Me zombie artist. Me love drawing! Help me draw a square
          in a special color. Important note: you have all the same blocks but they''ve
          now been arranged in categories.'
        turtle_2_2: Welcome to using functions, which let you define new blocks! Try
          the new "draw a square" block, found in the "Functions" category, to draw
          a small 50x50 green square.
        turtle_2_3: Use the "repeat" block (in the "Loops" category) to draw 3 squares
          of size 100, each 120 degrees apart. And do it in 3 different, random colors.
        turtle_2_4: 'Now we''re going to get fancy. Change the code to draw 36 squares,
          100 pixels wide, and each 10 degrees apart. Hint: you may want to use the
          slider to make me go faster.'
        turtle_2_5: Draw squares with sides of 50, 60, 70, 80, and 90 pixels.  You'll
          need to use the "draw a square" function five times.
        turtle_2_6: 'Ok, this program will use a counter, to draw the same squares
          as last time. You want the square to be the same size as the counter, so
          use the "counter" block. Hint: It''s in the Variables category.'
        turtle_2_7: Here's a program to draw a spiral, but the blocks are disabled
          so they won't run. Make a new program using a "count with" block (in the
          Loops category) and "counter" block (in the Variables category) to draw
          the same spiral.
        turtle_2_7_5: There's a new "draw a snowman" function (in the Functions category).
          Draw two snowmen, of height 250 and 100.
        turtle_2_8: This one's a bit tricky. Use the "draw a snowman" function and
          the new "jump forward" block (in the Actions category). Draw 3 snowmen in
          different colors, 100 pixels apart.
        turtle_2_9: Use a "count with" loop to draw a family of snowmen with heights
          of 110, 100, 90, 80, and 70. The snowmen should all be 60 pixels apart.
        turtle_2_10: Here's some code to try experimenting with different spirals.  What
          happens if you change the turn amount? Or set a random color in the loop?  Draw
          anything you like.
        maze_karel_2_1: 'Try using the blocks to help me remove all the piles and
          fill in all the holes on the ground. Try to use loops instead of using too
          many blocks. Hint: you can put a loop inside another loop.'
        maze_karel_2_2: We've defined our own block called "fill 5", which is now
          in the Functions category. Use it to help me fill in this hole.
        maze_karel_2_3: Use the new "fill 5" function block to make me fill in all
          the holes. You'll have to drag out the "fill 5" block out from the Functions
          category.
        maze_karel_2_4: Define a new function that removes 7 shovelfuls. Then use
          it to write a program that helps me remove all the piles.
        maze_karel_2_5: Create a new function that removes 6 shovelfuls from a pile,
          and use it to help me level out all the piles.
        maze_karel_2_6: Use two new functions, "fill 8" and "remove 8", to help me
          level out the pile and fill in the hole.
        maze_karel_2_7: There's a cow in my field! Write a new function that helps
          me avoid the cow and remove the pile. Put all your blocks inside the new
          function.
        maze_karel_2_8: Use this new function, "avoid the cow and remove 1", to help
          me remove all the piles.
        maze_karel_2_9: Ok, here's a function that removes 4 different piles of dirt
          in a vertical column. Try putting this function inside a loop, so that you
          remove all the piles of dirt using only a few new blocks.
        maze_karel_2_10: Move me across the field, and use these two functions to
          help me remove all the piles and fill all the holes.
        turtle_3_1: This puzzle shows you how the "draw a square" and "draw a circle"
          functions are defined.  Defining a function doesn't run its blocks.  You
          have to pull out the "draw a square" block to actually draw a square.
        turtle_3_2: Using the "draw a square" function as an example, create a "draw
          a triangle" function and use it.
        turtle_3_3: 'Draw triangular fences around the cats and a square fence around
          the cow.  Tip: test the program as you go along.'
        turtle_3_4: See if you can figure out how to use "draw a square" and "draw
          a triangle" (and some other blocks) to draw a house around the lion.
        turtle_3_5: 'Now create a new "draw a house" function and use it to house
          two cats. Hint: create a new function using the "do something" block, and
          type your own text to name the block.'
        turtle_3_6: 'Using "draw a square" as an example, add an input named "length"
          to "draw a triangle". Then, draw triangles in different sizes. (Hint: click
          the star to add an input to a function)'
        turtle_3_7: Add an input named "length" to "draw a house" and build a big
          house for the elephant (with edges 150 pixels long)
        turtle_3_8: Here are all of the blocks from the previous puzzle.  Modify "draw
          a house" so I end up at the bottom right corner after drawing a new house.
          Use this modified function to draw three houses.
        turtle_3_9: Can you re-create the "draw a house" function without help? Try
          it, and then draw a row of houses.
        turtle_3_10: You've learned a lot! Now use it to draw whatever you want. Try
          to draw a star, or a spiral, or a fancy snowflake.
        maze_karel_debug_seq_1: Welcome to debugging! My code doesn't work right.
          Can you spot the problem and fix it so that I can get my field flat and
          ready for planting?
        maze_karel_debug_seq_2: What's wrong with this program? How should you fix
          it so I can remove that pile?
        maze_karel_debug_repeat: De-bug this program for me so my field will be nice
          and flat.
        maze_karel_debug_while: How should you change this program to help me fill
          the hole?
        maze_karel_debug_if: Help! Fix the program so my field will be completely
          flat.
        maze_karel_debug_if_else: De-bug this program so I can fill in the holes and
          remove all the piles.
        maze_karel_debug_function_1: What should you change about this program to
          help me remove all the piles?
        maze_karel_debug_function_2: Can you de-bug this program for me so I can make
          my field flat?
        maze_karel_debug_function_3: 'Edit this program so I''ll remove all the piles
          on my field. '
        turtle_5_1: Try running this program, and make changes to see what happens.
          Can you figure out how it works? (Or delete it and replace it with something
          totally different)
        turtle_5_2: Try running this program, and make changes to see what happens.
          Can you figure out how it works? (Or delete it and replace it with something
          totally different)
        turtle_5_3: Try running this program, and make changes to see what happens.
          Can you figure out how it works? (Or delete it and replace it with something
          totally different)
        turtle_5_4: Try running this program, and make changes to see what happens.
          Can you figure out how it works? (Or delete it and replace it with something
          totally different)
        turtle_5_5: Try running this program, and make changes to see what happens.
          Can you figure out how it works? (Or delete it and replace it with something
          totally different)
        turtle_5_6: Try running this program, and make changes to see what happens.
          Can you figure out how it works? (Or delete it and replace it with something
          totally different)
        maze_3_1: I need to get to that pig! Type in a couple of calls to move();
          so I can get my eggs back.
        maze_3_2: Write me a program, so I can make it all the way to the pig.
        maze_3_3: How should I get to the pig? Make sure I don't run into the box
          of TNT!
        maze_3_4: Argh! Write me a program that gets me around the TNT and to the
          pig.
        bounce_1: Attach a block to the "when left arrow" block, then run and move
          the paddle with the left arrow key to the finish target.
        bounce_2: Attach a block to the "when right arrow" and "when left arrow" blocks,
          then run and move the paddle with the both arrow key to both finish targets.
        bounce_3: TBD
        bounce_4: TBD
        bounce_5: Attach a blocks to the "when right arrow", "when left arrow", "when
          ball hits wall", and "when ball hits paddle" blocks.
        bounce_6: Try again with more balls.
        bounce_7: Now it is getting crazy!
        bounce_8: Try again with more balls.
        bounce_9: Now it is getting crazy!
        bounce_10: There is a now a goal at the top. Attach "increment score" blocks
          to the the "when ball in goal" and "when ball misses paddle" blocks to make
          a game.
        Custom_builder: Drag blocks from the toolbox to the workspace to draw the
          level you wish to create. Press "Run Program" when you are ready.
        flappy_1: Attach a block to the "when click" block, then press "Run Program"
          and click or tap to move Flappy to the target.
        flappy_2: Now we've added some ground.  Attach a block to the "when hit the
          ground" block, then press "Run Program". To pass this puzzle, your code
          needs to 'END GAME' when Flappy crashes into the ground.
        flappy_3: The "when Run is clicked" block allows you to run code when your
          game first starts.  Try setting the level speed and flapping to the target.
        flappy_4: Flappy will fly through obstacles unless you write code to make
          him crash. Attach a block to the "when hit an obstacle" block. To pass the
          puzzle, your code needs to 'END GAME' and make Flappy crash into the first
          pipe so he can reach the target.
        flappy_5: Let's add a scoreboard, and count points when Flappy makes it past
          obstacles. Add to the "when pass an obstacle" block, and then score a point
          by flying Flappy through the first set of pipes.
        flappy_6: See if you can still score a point after making Flappy flap either
          a smaller or larger amount.
        flappy_7: Next, try changing the scene by attaching another block to the "when
          Run is clicked".
        flappy_11: Create your own Flappy game and share it. You can change the visuals,
          or even the rules. Try changing visuals each time Flappy passes an obstacle.
          Or make Flappy invincible so he never dies.
      levelIncompleteError:
        maze_2_8: 'To solve this, find the pattern that repeats. Use a "repeat" block
          with these 3 blocks inside it: move, move, turn right.'
      other1StarError:
        maze_2_14: You need an "if" block inside a "repeat" block. If you're having
          trouble, try the previous level again to see how it worked.
      tooFewBlocksMsg:
        maze_2_8: 'To solve this, find the pattern that repeats. Use a "repeat" block
          with these 3 blocks inside it: move, move, turn right.'
    video:
      name:
        maze_intro: Maze Intro
        artist_intro: Artist Intro
        farmer_intro: Farmer Intro
        flappy_intro: Flappy Intro
        loop_times: Repeat Times Block
        loop_until: Repeat Until Block
        if: If Block
        if_else: If/else Block
        function: Functions
        loop_while: While Block
        loop_for: Counter Block
        parameters: Functions with Parameters
        hoc_wrapup: Hour of Code Wrapup
        20_wrapup: 20-Hour Wrapup
