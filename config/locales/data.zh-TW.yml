"zh-TW":
  data:
    script:
      name:
        20-hour:
          desc: K-8 電腦科學課程簡介
          Unplug1: 階段 1
          Maze: 階段 2
          Unplug2: 階段 3
          Unplug3: 階段 4
          Artist: 階段 5
          Unplug4: 階段 6
          Artist2: 階段 7
          Unplug5: 階段 8
          Farmer: 階段 9
          Unplug6: 階段 10
          Artist3: 階段 11
          Unplug7: 階段 12
          Farmer2: 階段 13
          Unplug8: 階段 14
          Artist4: 階段 15
          Unplug9: 階段 16
          Farmer3: 階段 17
          Unplug10: 階段 18
          Artist5: 階段 19
          Unplug11: 階段 20
        Hour of Code:
          desc: 一小時的程式設計課程
          Maze: 階段 1
        Edit Code:
          desc: 編輯程式碼
          MazeEC: 階段 1
        2014 Levels:
          desc: 2014 Puzzles (beta)
          MazeEC: Stage 1
        Flappy Levels:
          desc: Flappy Bird
          MazeEC: Stage 1
    game:
      name:
        Unplug1: 電腦科學導論
        Maze: 迷宮
        Unplug2: 電腦計算式思維
        Unplug3: 圖畫紙程式設計
        Artist: 藝術家
        Unplug4: 演算法
        Artist2: 藝術家 2 號
        Unplug5: 函數
        Farmer: 農夫
        Unplug6: 條件式陳述
        Artist3: 藝術家 3 號
        Unplug7: 歌曲創作
        Farmer2: 農夫 2 號
        Unplug8: 抽象
        Artist4: 藝術家 4 號
        Unplug9: 接力式程式設計
        Farmer3: 農夫 3 號
        Unplug10: 網際網路
        Artist5: 藝術家 5 號
        Unplug11: 總結
        MazeEC: 迷宮
        Bounce: Bounce
        Flappy: Flappy Bird
    trophy:
      name:
        Bronze: 銅牌
        Silver: 銀牌
        Gold: 金牌
    concept:
      description:
        sequence: '序列 '
        if: '"如果" 程式積木'
        if_else: '"如果-其他" 程式積木'
        loop_times: '"重覆次數"程式積木'
        loop_until: '"重覆...直到" 程式積木'
        loop_while: '"當..." 程式積木'
        loop_for: '"計數器" 程式積木'
        function: 函數
        parameters: 具有參數的函數
    level:
      instructions:
        maze_2_2: 你可以幫我抓住這隻淘氣的豬嗎？試著使用幾個"向前移動"的程式積木堆疊在一起，然後按下"執行程式"來幫我達到目的地。
        maze_2_1: 這隻豬實在是太讓人生氣了。幫我把牠找出來吧！
        maze_2_2_5: 順著這條路把我帶領到傻豬那。記得不要碰到 TNT黃色炸藥，不然你會見到我的羽毛滿天飛 XD
        maze_2_3: 將我帶到那個綠色小惡魔那！(記得小心TNT黃色炸藥喔)
        maze_2_4: 冷靜下來，趕快幫我找到那隻壞豬豬。不然我真的會抓狂喔！！
        maze_2_5: 聽說有辦法只使用 2 個程式積木就能抓到那隻綠色笨豬。你有辦法辦到嗎？
        maze_2_6: 想辦法只用3個程式積木將我送到那個綠色入侵者那裡。
        maze_2_7: 幫我想想辦法試著使用最少的程式積木趕走這隻壞豬豬。試著使用多個"重複次數"程式積木來完成目標吧！
        maze_2_8: 要解開這個關卡，試著將"移動"、"移動"、"轉動"這三個程式積木放在"重複"程式積木中。
        maze_2_9: 好，接著讓我們試試這個新的"重複直到"程式積木，他會一直重複直到我抓到這隻惹人厭的豬豬。
        maze_2_10: 好，最後一次的練習--你可以使用4個程式積木解決這個問題嗎？
        maze_2_11: 親愛的人類。我～～僵屍～～餓了。想吃～～向日葵。你有辦法只用5個程式積木將我送到那嗎？
        maze_2_12: 好，這個也差不多，但還是有一些不同。你可以只用 5 個程式積木完成它嗎？
        maze_2_13: 使用新的"如果"程式積木讓我來決定何時要轉彎。提示： 只要在新增一個程式積木就可以了。但記得看看我們是如何安排其他程式積木，這樣下次你就可以自己完成整個程式設計囉。
        maze_2_14: 好，這就像是最後一個關卡，但你需要記住的是如何同時使用"如果"及"重複"程式積木的方式。
        maze_2_15: 我想要吃向日葵！試著使用"如果"程式積木，讓我用最少的程式積木吃到向日葵。
        maze_2_16: 好，讓我們再練習一次--這次跟之前差不多，但記得注意食殭花喔 ！
        maze_2_17: 這個"如果--其他"程式積木會檢查當前的條件，決定做那些事情。使用這個新的程式積木把我送到向日葵那吧！
        maze_2_18: 再練習一次"假如-其它"程式積木，你可以在第一次嘗試就成功嗎?
        maze_2_19: 你可以只靠新增3個程式積木，來幫我完成一個更複雜的關卡嗎？只要你成功了，往後不管任何長度的彎曲路徑我都可以行動自如啦！
        turtle_1_1: 你好，我是一個藝術家。您可以透過撰寫程式碼，讓我畫任何東西。試著使用幾個程式積木，讓我畫出跟圖片中的灰色線條相同的圖形。
        turtle_1_2: 現在，畫一個正方形。提醒：你可以從新的"設置顏色"程式積木中，挑選您最喜愛的顏色。
        turtle_1_3: 使用 3 個程式積木來畫出一個正方形。
        turtle_1_4: 使用"隨機顏色"選項來選取不同的顏色，讓三角形的三邊有不同顏色。提示： 你得先想清楚應該要轉多少角度，然後在經由點選"轉彎"程式積木中的角度數值來進行設定。
        turtle_1_5: 現在，練習畫一個三角形以及一個正方形來繪製一個信封。
        turtle_1_6: 你知道該如何畫出這個三角形以及正方形嗎？提示： 先畫三角形，然後想想在畫正方形之前應該要轉幾度。
        turtle_1_7: 好，讓我們試著提高一點點難度，試看看你有沒有辦法畫出這付綠色的眼鏡。正方形的邊長為 100 像素，兩個正方形之間間隔50像素。對了，不要忘記要用綠色來畫畫喔
          ！
        turtle_1_8: |
          試著想看看如果你按下"執行程式"按鈕來執行這個程式後會發生那些事情呢？
          接著在想辦法讓它多"重複"幾次來完成整個繪圖作品。每次畫線的顏色都會不同喔。
        turtle_1_9: 你知道用那一個數字來取代問號可以畫出一個圓形嗎？
        turtle_1_10: 你做到了！現在你可以畫任何你想畫的東西。一些有趣的點子：你可以畫一個火柴人、雪花或是螺旋圖形。同時也別忘了試試新的"設定寬度"程式積木喔！祝你玩得開心！
        turtle_4_1: 你有辦法只用3個程式積木畫出一個邊長為100像素的三角形嗎？提示：可以使用"重複"程式積木。
        turtle_4_2: 試著新增一個程式積木到工作區中來完成這個關卡。提示：我們已經提供繪製兩個相同三角形的程式積木，你只需要在兩者之間放入"轉彎"程式積木，並確定該轉幾度就可以了。
        turtle_4_3: 這裡你所寫的繪製三角型的程式碼。你有辦法透過新增"重複"及"轉彎"的程式積木，來畫出一朵漂亮的花嗎？
        turtle_4_4: 這裡的程式碼跟之前的關卡相同，改變的地方只有畫完每個三角形後會轉36度。如果要完成這個圖形，要"重複"多少次呢？(提示：轉360度後畫出的圖形會繞成一個圓。)
        turtle_4_5: 這裡的程式碼跟之前的關卡相同，改變的地方只有轉彎的部份"重複"36次。如果要完成這個圖形，每次轉的"角度"應該是多少呢？(提示：轉360度後畫出的圖形會繞成一個圓。)
        turtle_4_6: 你可以只用3個程式積木，畫出每邊長為20像素的正方形嗎？
        turtle_4_7: 這是你在上一個關卡畫正方形所使用的程式碼。你有辦法"重複"畫出10個一樣的正方形來組成一個梯子嗎？提示：你只需要在增加 2
          個程式積木。
        turtle_4_8: 這是前一個關卡的解法。你有辦法透過再新增2個程式積木來完成這件繪圖作品嗎?
        turtle_4_9: 這是前一個關卡的解法。應該要轉幾度才能完成這件繪圖作品呢？(可能需要多猜幾次才能猜對喔！)
        turtle_4_10: 這是前一個關卡的解法。應該要重複幾次才能完成這件繪圖作品呢？
        turtle_4_11: 試著改變"轉彎"程式積木的角度，以及"重複"程式積木的次數來產生不同的圖案。或者實驗看看改變其它的程式碼來畫出你想畫的東西。
        maze_karel_1_1: 嗨！我是一位農夫。我需要你協助我將農地整平好讓我可以種植農作物。將我移到土堆那，然後使用"移除"程式積木來移除土堆。
        maze_karel_1_2: 接下來，將我移到坑洞那裡，使用"填充"程式積木往洞裡填入2鏟的泥土。
        maze_karel_1_3: 將我移到小土堆上，試著使用最少的程式積木來告訴我該移除多少鏟的泥土。
        maze_karel_1_4: 你能協助我將四個小土堆移除嗎？提示：盡可能使用"重複"程式積木來完成這個工作。
        maze_karel_1_5: 幫助我填滿這些大的坑洞，每個坑洞需要填入5鏟的泥土。提示：你可以在"當"程式積木中，放進"重複"程式積木來完成這次的任務。
        maze_karel_1_6: 盡可能使用最少的程式積木來移除所有的小土堆。在"當"程式積木的下拉式選單中多了幾個新選項，可以用來協助你判斷現在是站在土堆或是坑洞的上方。
        maze_karel_1_7: 哇！我發現一個很深的坑洞！我不知道該用多少鏟泥土才能填平它。你可以撰寫一個程式來填平這個坑洞嗎？
        maze_karel_1_8: 盡可能使用最少的程式積木，幫我將田地最後面的坑洞填平。
        maze_karel_1_9: 試著盡可能使用最少的程式積木，讓我將所有的小土丘通通移除。提示：試著使用"當"程式積木。
        maze_karel_1_10: 我工作到太晚，以致於現在外面天都黑了，所以我沒法知道那些土堆到底有多大。現在"當"程式積木中的某些選項消失不見了。讓我沿著田地移動，同時如果有土堆的話，就將它們全部移除。
        maze_karel_1_11: 現在外面還是一片漆黑。讓我沿著田地移動，如果有土堆就將它移除，如果有坑洞就將它填滿。提示：使用"如果"程式積木選項中的下拉式選單。
        turtle_2_1: 你好‧我是僵屍藝術家。我愛畫畫。幫我用特定的顏色畫一個正方形。重要說明：所有的程式積木已經被歸類到不同的類別當中，試著點選各類別看看裡面有那些程式積木。
        turtle_2_2: 歡迎使用"函數類別"，在這裡你可以定義新的程式積木！你可以在"函數類別"中找到新的"畫一個正方形"程式積木，試著使用它畫一個
          "50x50" 的 "綠色" 正方形。
        turtle_2_3: 使用"重覆"程式積木(在"迴圈類別"目錄下)，畫出三個大小為100的正方形，每個角度差120度。同時使用三個不同的隨機顏色來繪製。
        turtle_2_4: 現在讓我們試著繪製花式的圖形吧。改變程式碼畫出36個寬度為100像素的正方形，每個角度相差10度。提示：你可能會想使用下方的"滑桿"來讓我走得更快些。
        turtle_2_5: 畫出邊長分別為50、60、70、80及90像素的正方形。你可能需要使用5次"畫一個正方形"函數來完成這個任務。
        turtle_2_6: 接下來這個程式，我們將使用一個計數器來畫出跟上一個關卡相同的正方形。試著使用"計數器"程式積木，讓你畫的正方形邊長跟計數器的數值相同。提示："計數器"程式積木位在"變數類別"中。
        turtle_2_7: 這個程式可以畫出一個螺旋，但這些程式積木已經被停用了，所以我們沒有辦法讓這個程式執行。你有辦法自己完成一個新的程式來完成相同的螺旋嗎？試著使用"計數"程式積木(在"循環類別"下)以及"計數器"程式積木(在"變數類別"下)來完成新的程式設計。
        turtle_2_7_5: (在函數類別） 中有一個新的"繪製一個雪人"函數。繪製兩個高度 250 和 100 的雪人。
        turtle_2_8: 這個關卡有點小小的難度。請使用"繪製雪人"函數以及新的"向前跳"程式積木(位在"動作類別"中)，分別用不同顏色畫出三個間隔100像素的雪人。
        turtle_2_9: 使用"計數"迴圈程式積木來繪製一個高度為110、100、90、80和70像素的雪人家庭。每個雪人之間要間隔60像素喔。
        turtle_2_10: 這裡有一些程式碼可以讓你進行試驗，產生一些不同的螺旋圖形。如果改變轉彎的角度，會發生什麼事情呢？或是在迴圈中設定隨機顏色，圖形又會變怎樣呢？隨性的畫些你喜歡的東西吧！
        maze_karel_2_1: 請幫我將地上所有的土堆移除並填平所有的坑洞。試著使用迴圈來減少程式積木的使用數量。提示：你可以將迴圈放在另一個迴圈當中喔。
        maze_karel_2_2: 在函數類別中，我們定義了一個程式積木叫 "填充5"。試著使用它來幫我填平這個坑洞。
        maze_karel_2_3: 將新的"填充5"程式積木從函數類別中拖拉到工作區，使用它幫我將地上所有的坑洞通通填平。
        maze_karel_2_4: 定義一個新的"函數"讓它可以移除7鏟的泥土。接著使用它來幫我移除所有的土堆。
        maze_karel_2_5: 建立一個新"函數"，讓它可以從土堆中移除6鏟泥土，使用它來幫助我擺脫這些土堆。
        maze_karel_2_6: 使用兩個新函數，"填充 8"及"移除 8"幫我移除所有的土堆及填滿所有的坑洞。
        maze_karel_2_7: 我的田地上有一頭牛！撰寫一個新函數，用它來幫助我避開牛隻並移除所有的土堆。記得把所有你需要的程式積木通通放在新函數中喔。
        maze_karel_2_8: 使用"避開牛及移除1"這個新函數，來幫助我移除田裡所有的土堆。
        maze_karel_2_9: 這裡有一個函數可以將同一列中的四個土堆一次移除。請試著將它放在迴圈內，讓你可以使用最少的程式積木將田裡的土堆通通移除。
        maze_karel_2_10: 使用這兩個函數來幫助我移除所有的土堆及填平所有的坑洞，好讓我可以穿越這片田地。
        turtle_3_1: '在這個關卡中我們提供你"畫正方形"及"畫圓形"這兩個函數。定義一個函數並不會執行它內部的程式積木。如果你要畫一個正方形，那麼你必需把"畫正方形"程式積木拖拉到工作區域才能執行。 '
        turtle_3_2: 使用"畫正方形"函數當範例，試著建立一個"畫三角形"的函數，並使用它。
        turtle_3_3: 在貓的周圍畫一個三角形的籬巴，在牛的周圍畫一個正方形的籬巴。提示：你可以邊寫程式邊測試。
        turtle_3_4: 試看看你能不能利用"畫正方形"跟"畫三角形"以及其它程式積木，圍繞著獅子的畫出一間房子。
        turtle_3_5: 現在建立一個新的"繪製房子"函數，並使用它來圍住兩隻貓咪。提示：使用"執行...."程式積木來建立函數，並且記得替它命名。
        turtle_3_6: 使用"畫正方形"當範例，替"畫三角形"函數新增一個名為"長度"的輸入變數。然後使用它來畫幾個不同大小的三角形。(提示：按下"函數"程式積木上的星星來新增輸入變數。)
        turtle_3_7: 替"繪製房子"新增一個名叫"長度"的輸入變數，然後用它來替大象蓋間房子吧。(房子的長度為150像素)
        turtle_3_8: 這些是前一個關卡的程式積木。修改"繪製房子"函數讓我在畫完房子後停在右下角。最後使用這個修改過的函數畫出三間房子。
        turtle_3_9: 你可以在沒人幫助的情況下重新建立"繪製房子"的函數嗎？試著自己完成它，然後用它畫出一排房子。
        turtle_3_10: 你已經學了好多東西！現在你可以隨意畫些你想畫的東西，畫個星星或是一個螺旋，或是更炫一點的畫個雪花吧。
        maze_karel_debug_seq_1: 歡迎來除錯 ！我的程式不能正常運行。你可以發現問題並修復它，這樣我的田地會是平坦的並能即刻種植作物嗎？
        maze_karel_debug_seq_2: 這程式怎麼了？我應該如何修正它所以我可以移除這土堆呢？
        maze_karel_debug_repeat: 除錯此程式所以我的領域將是漂亮和平坦的。
        maze_karel_debug_while: 你應該如何改變這個程式來協助我補這個缺口？
        maze_karel_debug_if: 幫我! 修正這個程式所以我的田地將完全是平坦的。
        maze_karel_debug_if_else: 除錯此程式所以我可以填平這些洞和移除所有土堆。
        maze_karel_debug_function_1: 你應該改變有關此程式的什麼來幫我移除所有的土堆？
        maze_karel_debug_function_2: 你可以除錯此程式因此我可以使我的田地平坦嗎？
        maze_karel_debug_function_3: 編輯此程式所以我會移除所有在我的田地上的土堆。
        turtle_5_1: 試著執行這個程式，然後做些改變看看它會發生什麼事情。你能清楚的知道它是怎麼運作的嗎？(或著刪除它，然後用完全不同的程式碼來取代它)
        turtle_5_2: 試著執行這個程式，然後做些改變看看它會發生什麼事情。你能清楚的知道它是怎麼運作的嗎？(或著刪除它，然後用完全不同的程式碼來取代它)
        turtle_5_3: 試著執行這個程式，然後做些改變看看它會發生什麼事情。你能清楚的知道它是怎麼運作的嗎？(或著刪除它，然後用完全不同的程式碼來取代它)
        turtle_5_4: 試著執行這個程式，然後做些改變看看它會發生什麼事情。你能清楚的知道它是怎麼運作的嗎？(或著刪除它，然後用完全不同的程式碼來取代它)
        turtle_5_5: 試著執行這個程式，然後做些改變看看它會發生什麼事情。你能清楚的知道它是怎麼運作的嗎？(或著刪除它，然後用完全不同的程式碼來取代它)
        turtle_5_6: 試著執行這個程式，然後做些改變看看它會發生什麼事情。你能清楚的知道它是怎麼運作的嗎？(或著刪除它，然後用完全不同的程式碼來取代它)
        maze_3_1: 我要去抓那頭豬 ！輸入幾個呼叫 move() 的程式；那我可以拿我的蛋回來。
        maze_3_2: 給我寫一個程式，所以我可以用它抓到那頭豬。
        maze_3_3: 我應該如何抓到那頭豬？確保我不會碰到那 TNT 的盒子！
        maze_3_4: 阿！給我一個程式讓我可以繞過那些TNT炸藥，然後抓到那隻豬。
        bounce_1: Attach a block to the "when left arrow" block, then run and move
          the paddle with the left arrow key to the finish target.
        bounce_2: Attach a block to the "when right arrow" and "when left arrow" blocks,
          then run and move the paddle with the both arrow key to both finish targets.
        bounce_3: TBD
        bounce_4: TBD
        bounce_5: Attach a blocks to the "when right arrow", "when left arrow", "when
          ball hits wall", and "when ball hits paddle" blocks.
        bounce_6: Try again with more balls.
        bounce_7: Now it is getting crazy!
        bounce_8: Try again with more balls.
        bounce_9: Now it is getting crazy!
        bounce_10: There is a now a goal at the top. Attach "increment score" blocks
          to the the "when ball in goal" and "when ball misses paddle" blocks to make
          a game.
        Custom_builder: Drag blocks from the toolbox to the workspace to draw the
          level you wish to create. Press "Run Program" when you are ready.
        flappy_1: Attach a block to the "when click" block, then press "Run Program"
          and click or tap to move Flappy to the target.
        flappy_2: Now we've added some ground.  Attach a block to the "when hit the
          ground" block, then press "Run Program". To pass this puzzle, your code
          needs to 'END GAME' when Flappy crashes into the ground.
        flappy_3: The "when Run is clicked" block allows you to run code when your
          game first starts.  Try setting the level speed and flapping to the target.
        flappy_4: Flappy will fly through obstacles unless you write code to make
          him crash. Attach a block to the "when hit an obstacle" block. To pass the
          puzzle, your code needs to 'END GAME' and make Flappy crash into the first
          pipe so he can reach the target.
        flappy_5: Let's add a scoreboard, and count points when Flappy makes it past
          obstacles. Add to the "when pass an obstacle" block, and then score a point
          by flying Flappy through the first set of pipes.
        flappy_6: See if you can still score a point after making Flappy flap either
          a smaller or larger amount.
        flappy_7: Next, try changing the scene by attaching another block to the "when
          Run is clicked".
        flappy_11: Create your own Flappy game and share it. You can change the visuals,
          or even the rules. Try changing visuals each time Flappy passes an obstacle.
          Or make Flappy invincible so he never dies.
      levelIncompleteError:
        maze_2_8: '要解決這個關卡，請找出重覆的片斷。使用"重覆"程式積木將: 前進，前進，右轉 這三個程式積木包在其中。'
      other1StarError:
        maze_2_14: 你需要將"如果"程式積木放在"重覆"程式積木中。如果遇到困難，試著回到前一個階段看看它是如何運作的。
      tooFewBlocksMsg:
        maze_2_8: '要解決這個關卡，請找出重覆的片斷。使用"重覆"程式積木將: 前進，前進，右轉 這三個程式積木包在其中。'
    video:
      name:
        maze_intro: 迷宮簡介
        artist_intro: 藝術家簡介
        farmer_intro: 農夫簡介
        flappy_intro: Flappy Intro
        loop_times: '"重覆...次"程式積木'
        loop_until: '"重覆...直到"程式積木'
        if: '"如果"程式積木'
        if_else: '"如果..否則"程式積木'
        function: 函數
        loop_while: '"當...時"程式積木'
        loop_for: '"計數" 程式積木'
        parameters: 具有參數的函數
        hoc_wrapup: 一小時程式碼總結
        20_wrapup: 20小時課程總結
